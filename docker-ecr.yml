stages:
  - deploy_dev
  - deploy_prod

.aws_prod:
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_prod
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_prod

.aws_dev:
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_dev
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_dev

.deploy_ecr:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  script:
    - apk add --no-cache python py-pip
    - pip install awscli
    - aws ecr get-login-password --region $ECR_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY
    - docker build $ECR_REPOSITORY/$ECR_IMAGE:latest .
    - docker push $ECR_REPOSITORY/$ECR_IMAGE:latest

deploy_docker_dev:
  stage: deploy_dev
  extends:
    - .aws_dev
    - .deploy_ecr
  variables:
    ECR_REPOSITORY: $ECR_REPOSITORY_dev
  environment:
    name: development
  only:
    - master

deploy_docker_prod:
  stage: deploy_prod
  extends:
    - .aws_dev
    - .deploy_ecr
  variables:
    ECR_REPOSITORY: $ECR_REPOSITORY_prod
  environment:
    name: production
  dependencies:
    - deploy_docker_dev
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_BRANCH == "master"'
      when: manual
    - when: never